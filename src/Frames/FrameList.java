package Frames;


import Classes.Medico;
import Classes.Paciente;
import Manager.MedicoManager;
import Manager.PacienteManager;
import java.awt.Frame;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FagnerRoger
 */
public class FrameList extends javax.swing.JFrame {

    /**
     * Creates new form FrmeListContasPagar
     */
    public FrameList(boolean status) {
       initComponents();
       setTipoFrame(status);
       
    }    
    
    public FrameList(){
        initComponents();
    }
     private MedicoManager medicoManager = new MedicoManager();
     private PacienteManager pacienteManager = new PacienteManager();
     private boolean isMedico;
     private List<Medico> list = null;
     private List<Paciente> listPaciente = null;
                    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXTitledPanel1 = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jBTCadastrar = new javax.swing.JButton();
        jBTManutencao = new javax.swing.JButton();
        jBTExcluir = new javax.swing.JButton();
        jBTCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setExtendedState(Frame.MAXIMIZED_BOTH);

        jXTitledPanel1.setScrollableHeightHint(org.jdesktop.swingx.ScrollableSizeHint.FIT);
        jXTitledPanel1.setScrollableWidthHint(org.jdesktop.swingx.ScrollableSizeHint.HORIZONTAL_STRETCH);
        jXTitledPanel1.setTitle("Médicos");
        jXTitledPanel1.setTitleFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setColumnSelectionAllowed(true);
        tabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabela);
        tabela.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(0).setPreferredWidth(200);
            tabela.getColumnModel().getColumn(1).setResizable(false);
        }

        jBTCadastrar.setBackground(new java.awt.Color(255, 255, 255));
        jBTCadastrar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBTCadastrar.setText("Novo");
        jBTCadastrar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Comic Sans MS", 0, 10), new java.awt.Color(204, 204, 204))); // NOI18N
        jBTCadastrar.setPreferredSize(new java.awt.Dimension(71, 39));
        jBTCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTCadastrarActionPerformed(evt);
            }
        });

        jBTManutencao.setBackground(new java.awt.Color(255, 255, 255));
        jBTManutencao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBTManutencao.setText("Manutenção");
        jBTManutencao.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Comic Sans MS", 0, 10), new java.awt.Color(204, 204, 204))); // NOI18N
        jBTManutencao.setMaximumSize(new java.awt.Dimension(71, 39));
        jBTManutencao.setMinimumSize(new java.awt.Dimension(71, 39));
        jBTManutencao.setPreferredSize(new java.awt.Dimension(71, 39));
        jBTManutencao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTManutencaoActionPerformed(evt);
            }
        });

        jBTExcluir.setBackground(new java.awt.Color(255, 255, 255));
        jBTExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBTExcluir.setText("Excluir");
        jBTExcluir.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Comic Sans MS", 0, 10), new java.awt.Color(204, 204, 204))); // NOI18N
        jBTExcluir.setPreferredSize(new java.awt.Dimension(71, 39));
        jBTExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTExcluirActionPerformed(evt);
            }
        });

        jBTCancelar.setBackground(new java.awt.Color(255, 255, 255));
        jBTCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBTCancelar.setText("Cancelar");
        jBTCancelar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Comic Sans MS", 0, 10), new java.awt.Color(204, 204, 204))); // NOI18N
        jBTCancelar.setPreferredSize(new java.awt.Dimension(71, 39));
        jBTCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBTCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jBTManutencao, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jBTExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(191, 191, 191)
                .addComponent(jBTCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBTManutencao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBTExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBTCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBTCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXTitledPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jXTitledPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBTCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTCadastrarActionPerformed
        FrameCadastro frame = new FrameCadastro(false, isMedico);
        frame.setVisible(true);
        dispose();
        frame.show(true);
        dispose();
    }//GEN-LAST:event_jBTCadastrarActionPerformed

    private void jBTManutencaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTManutencaoActionPerformed
        try {
            if (tabela.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(this, "Selecione um lançamento a ser editado!!!", "Manuteção Lançamento", 1);
            } else {
                if (JOptionPane.showConfirmDialog(this, "Tem certeza que deseja Editar esse lançamento?", "Editar Lançamento", JOptionPane.INFORMATION_MESSAGE) == JOptionPane.OK_OPTION) {
                    int id = tabela.getSelectedRow();
                    System.out.println("1");
                    if(isMedico){
                        Medico idMedico = getList().get(id);
                        FrameCadastro frame = new FrameCadastro(idMedico,true);
                        frame.setVisible(true);
                        frame.show(true);
                        dispose();
                    }else{
                        Paciente idPaciente= getListPaciente().get(id);
                        FrameCadastro frame = new FrameCadastro(idPaciente, true);
                        frame.setVisible(true);
                        frame.show(true);
                        dispose();
                    }
                }
            }            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na Manutenção: " + e.getMessage(), jXTitledPanel1.getTitle(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBTManutencaoActionPerformed

    private void jBTExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTExcluirActionPerformed
        try {
            if (tabela.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(this, "Selecione um lançamento a ser excluido!!!", "Excluir Lançamento", 1);
            } else {
                if (JOptionPane.showConfirmDialog(this, "Tem certeza que deseja apagar esse lançamento?", "Excluir Lançamento", JOptionPane.INFORMATION_MESSAGE) == JOptionPane.OK_OPTION) {
                    int id = tabela.getSelectedRow();
                    if(isMedico){
                        Medico idMedico = getList().get(id);
                        medicoManager.destroy(idMedico);                  
                        AtualizarListMedico(medicoManager.getALL());
                    }else{
                        Paciente idPaciente = getListPaciente().get(id);
                        pacienteManager.destroy(idPaciente);
                        AtualizarListPaciente(pacienteManager.getALL());
                    }
                }
            }            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no Excluir: " + e.getMessage(),jXTitledPanel1.getTitle(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBTExcluirActionPerformed

    private void jBTCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTCancelarActionPerformed
        MenuPrincipal frame = new MenuPrincipal();
        frame.show();
        dispose();
    }//GEN-LAST:event_jBTCancelarActionPerformed

    /** 
     * @param args the command line arguments
     */ 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
      
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameList().setVisible(true);
            }
        });
    }
   
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTCadastrar;
    private javax.swing.JButton jBTCancelar;
    private javax.swing.JButton jBTExcluir;
    private javax.swing.JButton jBTManutencao;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

     //<editor-fold defaultstate="collapsed" desc="ListMédico ">
    public javax.swing.JTable getTabela() {
        return tabela;
    }

    public void setTabela(javax.swing.JTable tabela) {
        this.tabela = tabela;
    }

    public List<Medico> getList() {
        return list;
    }

    public void setList(List<Medico> list) {
        this.list = list;
    }

    public List<Paciente> getListPaciente() {
        return listPaciente;
    }

    public void setListPaciente(List<Paciente> listPaciente) {
        this.listPaciente = listPaciente;
    }
    
    
    
     
    
    public void AtualizarListMedico(List<Medico> lista) {
        try {

            tabela.getColumnModel().getColumn(0).setPreferredWidth(100);
            tabela.getColumnModel().getColumn(1).setPreferredWidth(100);
            setList(lista);
            DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
            modelo.setNumRows(0);
            for (Medico item : lista) {
                 modelo.addRow(new Object[]{
                    item.getNome().getNome(), item.getCpf()
                 });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao  AtualizarListMedico!!!");
        }
    }
    
     public void AtualizarListPaciente(List<Paciente> lista) {
        try {

            tabela.getColumnModel().getColumn(0).setPreferredWidth(100);
            tabela.getColumnModel().getColumn(1).setPreferredWidth(100);
            setListPaciente(lista);
            DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
            modelo.setNumRows(0);
            for (Paciente item : lista) {
                 modelo.addRow(new Object[]{
                    item.getNome().getNome(), item.getCpf()
                 });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao  AtualizarListPaciente!!!");
        }
    }
    
     private void setTipoFrame(boolean status) {
        isMedico = status;
        if(isMedico){
            jXTitledPanel1.setTitle("Médico");
            AtualizarListMedico(medicoManager.getALL());
        }else{
            jXTitledPanel1.setTitle("Paciente");
            AtualizarListPaciente(pacienteManager.getALL());
        }
    }

   
     //</editor-fold>

   
}
